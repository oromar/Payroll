@model IEnumerable<Payroll.Models.Workplace>

@{
    var currentPage = ViewData["CurrentPage"] as int? ?? 1;
    var hasMore = ViewData["HasMore"] as bool? ?? false;
    var filter = ViewData["CurrentFilter"] as string ?? string.Empty;
    ViewData["Title"] = Resource.WorkplaceTitle;
    var previousSort = string.IsNullOrEmpty(ViewBag.Sort) ? "Name" : ViewBag.Sort;
    var previousOrder = string.IsNullOrEmpty(ViewBag.Order) ? "ASC" : ViewBag.Order;

    var searchFields = new Workplace().SearchFields;

}

<h2>@Resource.WorkplaceTitle</h2>

<p>
    <a href="#" data-toggle="modal" data-target="#Create_Modal">
        @Resource.NewWorkplace
    </a>
</p>
<partial name="_Search" model="@searchFields"/>
<table class="table table-striped table-hover">
    <thead class="default_color">
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="Company.Name"
                   asp-route-order="@(previousSort == "Company.Name" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Resource.Company
                    </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="Name"
                   asp-route-order="@(previousSort == "Name" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Html.DisplayNameFor(model => model.Name)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="Address"
                   asp-route-order="@(previousSort == "Address" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Html.DisplayNameFor(model => model.Address)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="City"
                   asp-route-order="@(previousSort == "City" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Html.DisplayNameFor(model => model.City)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="State"
                   asp-route-order="@(previousSort == "State" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Html.DisplayNameFor(model => model.State)
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-filter="@filter"
                   asp-route-page="@currentPage"
                   asp-route-sort="CreatedBy"
                   asp-route-order="@(previousSort == "CreatedBy" && previousOrder == "ASC" ? "DESC" : "ASC")" class="default_color">
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </a>
            </th>
            <th style="text-align:center" class="col-md-2" colspan="3">@Resource.Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <td class="no-items" colspan="7">
                    @Resource.NoItems
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Company.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <partial name="_ActionsColumn" model="@item" />
                </tr>
            }
        }
    </tbody>
</table>

<partial name="_Pagination" model="@(new {currentPage, hasMore, filter })" />

<div class="modal fade" id="Create_Modal" tabindex="-1" role="dialog" aria-labelledby="createWorkplaceModal" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header default_color"> <button type="button" class="close" aria-label="createCompanyModal" onclick="$('#Create_Modal').modal('hide')"><span aria-hidden="true">&times;</span></button>
                <h3 class="modal-title" id="exampleModalLabel">@Resource.NewWorkplace</h3>
            </div>
            <div class="modal-body" style="border:none;">
                @{ ViewData["Mode"] = "Create"; }
                <partial name="Form" model="new Workplace()" view-data="ViewData"/>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
